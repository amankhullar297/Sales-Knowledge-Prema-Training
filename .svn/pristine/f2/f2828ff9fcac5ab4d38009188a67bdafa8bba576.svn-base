package com.prema.sales.controller;
import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.prema.sales.entity.*;



import com.prema.sales.common.SessionBean;
import com.prema.sales.dao.*;

@Controller
public class FeedController {

	
	@Autowired
	FeedbackDao fd;
	
	@RequestMapping(value="/orgAdminFeedback", method=RequestMethod.GET)
	public ModelAndView feedbackEnter(ModelMap model, HttpServletRequest request)
	{
		//System.out.println("Requesting session");
		//HttpSession session = request.getSession();
		//SessionBean sb=	(SessionBean)session.getAttribute("sessionBean");
		//System.out.println("Session variable sb set to="+sb);
		//if(sb==null) {
			//System.out.println("The session was not set, Asked to log in first");
			//ModelAndView modelAndView = new ModelAndView("getLogin");
			//modelAndView.addObject("msg","Please Login First");
			
			//return modelAndView;
		//}
		//else {
			System.out.println("The session was set");
		
		Feedback feedback = new Feedback();
		List<Feedback> list=fd.selectAll();
		//RegOrg regOrg = new RegOrg();
		//regOrg.setOrgId(sb.getOrgId());
		//feedback.setRegOrg(regOrg);
		
		ModelAndView modelAndView = new ModelAndView("orgAdminFeedback");
		modelAndView.addObject("feedbackList",list);
		modelAndView.addObject(feedback);
		return modelAndView;
		//}
	}
	
	
	@RequestMapping(value="/orgAdminFeedbackView", method=RequestMethod.GET)
	public ModelAndView feedbackAdminView(ModelMap model, HttpServletRequest request)
	{
		//System.out.println("Requesting session");
		//HttpSession session = request.getSession();
		//SessionBean sb=	(SessionBean)session.getAttribute("sessionBean");
		//System.out.println("Session variable sb set to="+sb);
		//if(sb==null) {
			//System.out.println("The session was not set, Asked to log in first");
			//ModelAndView modelAndView = new ModelAndView("getLogin");
			//modelAndView.addObject("msg","Please Login First");
			
			//return modelAndView;
		//}
		//else {
			System.out.println("The session was set");
		
		Feedback feedback = new Feedback();
		List<Feedback> list=fd.selectAllD();
		//RegOrg regOrg = new RegOrg();
		//regOrg.setOrgId(sb.getOrgId());
		//feedback.setRegOrg(regOrg);
		
		ModelAndView modelAndView = new ModelAndView("orgAdminFeedView");
		modelAndView.addObject("feedbackList",list);
		modelAndView.addObject(feedback);
		return modelAndView;
		//}
	}
	
	
	@RequestMapping(value="/pssAdFeedEdit", method=RequestMethod.GET)
	public ModelAndView feedbackEdit(ModelMap model, HttpServletRequest request)
	{
		//System.out.println("Requesting session");
		//HttpSession session = request.getSession();
		//SessionBean sb=	(SessionBean)session.getAttribute("sessionBean");
		//System.out.println("Session variable sb set to="+sb);
		//if(sb==null) {
			//System.out.println("The session was not set, Asked to log in first");
			//ModelAndView modelAndView = new ModelAndView("getLogin");
			//modelAndView.addObject("msg","Please Login First");
			
			//return modelAndView;
		//}
		//else {
			System.out.println("The session was set");
		
		Feedback feedback = new Feedback();
		List<Feedback> list=fd.selectAll();
		//RegOrg regOrg = new RegOrg();
		//regOrg.setOrgId(sb.getOrgId());
		//feedback.setRegOrg(regOrg);
		
		ModelAndView modelAndView = new ModelAndView("pssAdminFeedback");
		modelAndView.addObject("feedbackList",list);
		modelAndView.addObject(feedback);
		return modelAndView;
		//}
	}
	
	
	@RequestMapping(value="/pssAdminFeedbackView", method=RequestMethod.GET)
	public ModelAndView pssfeedbackView(ModelMap model, HttpServletRequest request)
	{
		//System.out.println("Requesting session");
		//HttpSession session = request.getSession();
		//SessionBean sb=	(SessionBean)session.getAttribute("sessionBean");
		//System.out.println("Session variable sb set to="+sb);
		//if(sb==null) {
			//System.out.println("The session was not set, Asked to log in first");
			//ModelAndView modelAndView = new ModelAndView("getLogin");
			//modelAndView.addObject("msg","Please Login First");
			
			//return modelAndView;
		//}
		//else {
			System.out.println("The session was set");
		
		Feedback feedback = new Feedback();
		List<Feedback> list=fd.selectAllD();
		//RegOrg regOrg = new RegOrg();
		//regOrg.setOrgId(sb.getOrgId());
		//feedback.setRegOrg(regOrg);
		
		ModelAndView modelAndView = new ModelAndView("pssAdminFeedView");
		modelAndView.addObject("feedbackList",list);
		modelAndView.addObject(feedback);
		return modelAndView;
		//}
	}
	
	
	
	
	@RequestMapping(value="/feedbackInsert", method=RequestMethod.GET)
	public ModelAndView feedbackInsert(@ModelAttribute("feedback") Feedback feedback, HttpServletRequest request)
	{
		//HttpSession session = request.getSession();
		//SessionBean sb=	(SessionBean)session.getAttribute("sessionBean");
	    
		
		//sessionBean
		
		System.out.println("*****Function called***");
		System.out.println(feedback);
		
		java.util.Date javaDate = new java.util.Date();
		java.sql.Date sqlDate = new java.sql.Date(javaDate.getTime());
		feedback.setD1(sqlDate);
		String result = "";
		result=fd.insert(feedback);
		
				
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("orgAdminFeedback");
		
		List<Feedback> list =fd.selectAll();
		modelAndView.addObject("feedbackList", list);
		feedback=new Feedback();
		modelAndView.addObject(feedback);
		
		System.out.println(result);
	return modelAndView;	
	}
	
	@RequestMapping(value="/feedbackDelete", method=RequestMethod.GET)
	public ModelAndView feedbackDelete(@RequestParam("fbid") int fbid) {
		String result = fd.delete(fbid);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("pssAdminFeedback");
		List<Feedback> list =fd.selectAll();
		modelAndView.addObject("feedbackList", list);
		Feedback feedback =new Feedback();
		modelAndView.addObject(feedback);
		
		System.out.println(result);
	return modelAndView;	
	}
	
	@RequestMapping(value="/feedbackUpdateForm", method=RequestMethod.GET)
	public ModelAndView feedbackUpdateLoad(@RequestParam("fbid") int fbid) {
		System.out.println("Finding by Id");
		Feedback feedback = fd.findById(fbid);
		System.out.println("Found");
		System.out.println("Processing select all");
		List<Feedback> list=fd.selectAll();
		System.out.println("Processed, view pssAdmFeedbackUpd");
		ModelAndView modelAndView = new ModelAndView("pssAdmFeedbackUpd");
		modelAndView.addObject("feedbackList",list);
		modelAndView.addObject(feedback);
		return modelAndView;
	}
	
	@RequestMapping(value="/feedbackUpdate", method=RequestMethod.GET)
	public ModelAndView studentInsert(@ModelAttribute("feedback") Feedback feedback) {
		System.out.println(feedback);
		
		java.util.Date javaDate = new java.util.Date();
		java.sql.Date sqlDate = new java.sql.Date(javaDate.getTime());
		feedback.setD1(sqlDate);
		
		String result = "";
		if(feedback.getFbid()>0) {
			result = fd.update(feedback);
		}

		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("pssAdminFeedback");
		List<Feedback> list =fd.selectAll();
		modelAndView.addObject("feedbackList", list);
		modelAndView.addObject(feedback);
		
		System.out.println(result);
	return modelAndView;	
	}

}

