package com.prema.sales.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.servlet.ModelAndView;

import com.prema.sales.common.SessionBean;
import com.prema.sales.dao.ClientCompanyDao;
import com.prema.sales.dao.ProductDao;
import com.prema.sales.dao.SalesKnowledgeDao;
import com.prema.sales.entity.ClientCompany;
import com.prema.sales.entity.OrgEmployee;
import com.prema.sales.entity.Product;
import com.prema.sales.entity.SalesKnowledge;

@Controller
public class SalesKnowledgeController {
	@Autowired
	SalesKnowledgeDao skdao;
	@Autowired
	ClientCompanyDao cdao;
	@Autowired
	ProductDao pdao;
	
	
	
	

	
	@RequestMapping(value="/temp", method=RequestMethod.GET)
	public ModelAndView salesKnowledgeTemp(HttpSession session) {
		SessionBean sessionBean=  (SessionBean )session.getAttribute("sessionBean");
		int orgId=sessionBean.getOrgId();
		
       ModelAndView modelAndView=new ModelAndView();
		modelAndView.setViewName("orgEmpSalesKnowledgeAdd");
		
		List<ClientCompany> clientsList=cdao.selectByOrgId(orgId);
		modelAndView.addObject("clientsList", clientsList);
		List<Product> productsList=pdao.selectAllByOrgId(orgId);
		modelAndView.addObject("productsList", productsList);
		SalesKnowledge salesKnowledge=new SalesKnowledge();
		modelAndView.addObject(salesKnowledge);
		
	
		return modelAndView;
		}
	

	@RequestMapping(value="/view", method=RequestMethod.GET)
	public ModelAndView salesKnowledgeView(HttpSession session) {
       ModelAndView modelAndView=new ModelAndView();
       SessionBean sessionBean=  (SessionBean )session.getAttribute("sessionBean");
		int orgId=sessionBean.getOrgId();
		

       
		modelAndView.setViewName("orgEmpSalesKnowledgeSelect");
		List<ClientCompany> clientsList=cdao.selectByOrgId(orgId);
		modelAndView.addObject("clientsList", clientsList);
		List<Product> productsList=pdao.selectAllByOrgId(orgId);
		modelAndView.addObject("productsList", productsList);
	
		return modelAndView;
		}
	
	
	@RequestMapping(value="/salesKnowledgeInsert", method=RequestMethod.POST)
	public ModelAndView salesKnowledgeInsert(@ModelAttribute("salesKnowledge") SalesKnowledge salesKnowledge,HttpSession session) {
		String result="";
		if(salesKnowledge.getSalesId()>0) {
			result=skdao.update(salesKnowledge);
		}
		else {
			java.util.Date date=new java.util.Date();
			java.sql.Date entryDate=new java.sql.Date(date.getTime());
			salesKnowledge.setEntryDate(entryDate);
			SessionBean sessionBean=(SessionBean)session.getAttribute("sessionBean");
			int empId=sessionBean.getEmpId();
			OrgEmployee regEmployee=new OrgEmployee();
			regEmployee.setEmpId(empId);
			salesKnowledge.setRegEmployee(regEmployee);
			result=skdao.insert(salesKnowledge);
		}
		ModelAndView modelAndView=new ModelAndView();
		modelAndView.setViewName("empOrgDashboard");
		
		
		return modelAndView;
		}
	
	@RequestMapping(value="/salesKnowledgeDelete", method=RequestMethod.POST)
	public ModelAndView salesKnowledgeDelete(@RequestParam("salesId") int salesId, @RequestParam("productId") int productId,@RequestParam("clientId") int clientId) {
       String result=skdao.delete(salesId);
       ModelAndView modelAndView=new ModelAndView();
		modelAndView.setViewName("salesKnowledgeList");
		SalesKnowledge salesKnowledge=new SalesKnowledge();
		modelAndView.addObject(salesKnowledge);
		
		return modelAndView;
		}
	
	@RequestMapping(value="/salesKnowledgeLoad", method=RequestMethod.GET)
	public ModelAndView salesKnowledgeLoad(@RequestParam("clientId") int clientId,@RequestParam("productId" ) int productId,HttpSession session ) {
		ModelAndView modelAndView=new ModelAndView();
		modelAndView.setViewName("salesKnowledgeSelect");
		SessionBean sessionBean=  (SessionBean )session.getAttribute("sessionBean");
		int orgId=sessionBean.getOrgId();
		modelAndView.getModelMap().addAttribute("clientId", clientId);
		modelAndView.getModelMap().addAttribute("productId", productId);
		
				
		if(clientId>0 && productId>0 && orgId>0) {
			List<SalesKnowledge> list=skdao.selectByClientAndProductAndOrgId(clientId, productId, orgId);
			modelAndView.addObject("salesKnowledgeList",list);
			
		}
		else if(clientId>0 && productId==0 && orgId==0){
			List<SalesKnowledge> list=skdao.selectByClientId(clientId);
			modelAndView.addObject("salesKnowledgeList",list);
				}
			else if(productId>0 && clientId==0 && orgId==0) {
				List<SalesKnowledge> list=skdao.selectByProductId(productId);
				modelAndView.addObject("salesKnowledgeList",list);
				
			}
			else if (clientId>0 && productId>0 && orgId==0) {
				List<SalesKnowledge> list=skdao.selectByClientAndProductId(clientId, productId);
				modelAndView.addObject("salesKnowledgeList",list);
			}
			else if(orgId>0 && clientId==0 && productId>0) {
				List<SalesKnowledge> list=skdao.selectByOrgAndProductId(orgId, productId);
				modelAndView.addObject("salesKnowledgeList",list);
			
		}
			else if(orgId>0 && clientId==0 && productId==0) {
				List<SalesKnowledge> list=skdao.selectByOrgId(orgId);
				modelAndView.addObject("salesKnowledgeList",list);
			
		}

			else if(orgId>0 && clientId>0 && productId==0) {
				List<SalesKnowledge> list=skdao.selectByOrgAndClientId(orgId,clientId);
				modelAndView.addObject("salesKnowledgeList",list);
				
			
		}
		
		
		return modelAndView;
		}
	
	@RequestMapping(value="/salesKnowledgeFind", method=RequestMethod.POST)
	public ModelAndView salesKnowledgeFind(@RequestParam("salesId") int salesId) {
       SalesKnowledge salesKnowledge=skdao.findById(salesId);
       ModelAndView modelAndView=new ModelAndView();
		modelAndView.setViewName("empOrgSalesKnowledgeAdd");
		modelAndView.addObject(salesKnowledge);
		return modelAndView;
		}
	
		
	

	
	
	
	
	

}
